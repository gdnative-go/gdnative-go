image: golang:1.14.4-buster

variables:
    TAG: $CI_BUILD_REF_NAME
    VERSION: "NONE"

# define non taggable references
.non_taggable_refs: &non_taggable_refs
    - "/^master$"
    - "tags"

stages:
    - code_health
    - test
    - version

cache:
    paths:
        - $GOPATH/pkg/mod

# ----------------- code health -----------------
validate_commit_message:
    stage: code_health
    image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.20.4
    script:
        - release test-git
    allow_failure: false
    except:
        *non_taggable_refs

code_format_analysys:
    stage: code_health
    script:
        - go get -u github.com/sqs/goreturns
        - if [[ $(goreturns -d ./gdnative && goreturns -d ./cmd) -eq "" ]]; then echo "goreturns check successful"; exit 0; fi
        - echo "ERROR - goreturns check failed - please run goreturns on your code and commit again"
        - goreturns -d ./gdnative
        - goreturns -d ./cmd
        - exit 1
    allow_failure: false
    except:
        - tags

# here will be golangci-lint call when I fix all inherited godot-go errors

# ----------------- test -----------------
compile_gdnativego:
    stage: test
    script:
        - git submodule update --init --recursive
        - go get -u github.com/sqs/goreturns
        - go run ./build/mage.go generate
        - go run ./build/mage.go build
        - go run ./build/mage.go gdnativego
    except:
        - tags

# ----------------- version -----------------
update_version:
    stage: version
    image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.20.4
    script:
        - release changelog
        - release commit-and-tag --create-tag-pipeline CHANGELOG.md
    allow_failure: true
    when: manual
    only:
        - master